// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorldStatusUpdate.proto

#ifndef PROTOBUF_WorldStatusUpdate_2eproto__INCLUDED
#define PROTOBUF_WorldStatusUpdate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

namespace strategy_protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

class WorldStatusUpdate;
class WorldStatusUpdate_CommonProperties;
class WorldStatusUpdate_Base;
class WorldStatusUpdate_Mine;
class WorldStatusUpdate_Obstacle;
class WorldStatusUpdate_Worker;
class WorldStatusUpdate_Soldier;
class WorldStatusUpdate_Boss;
class WorldStatusUpdate_Minion;

// ===================================================================

class WorldStatusUpdate_CommonProperties : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_CommonProperties();
  virtual ~WorldStatusUpdate_CommonProperties();

  WorldStatusUpdate_CommonProperties(const WorldStatusUpdate_CommonProperties& from);

  inline WorldStatusUpdate_CommonProperties& operator=(const WorldStatusUpdate_CommonProperties& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_CommonProperties& default_instance();

  void Swap(WorldStatusUpdate_CommonProperties* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_CommonProperties* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_CommonProperties& from);
  void MergeFrom(const WorldStatusUpdate_CommonProperties& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional .strategy_protocol.Position position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline const ::strategy_protocol::Position& position() const;
  inline ::strategy_protocol::Position* mutable_position();
  inline ::strategy_protocol::Position* release_position();
  inline void set_allocated_position(::strategy_protocol::Position* position);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.CommonProperties)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::strategy_protocol::Position* position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_CommonProperties* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Base : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Base();
  virtual ~WorldStatusUpdate_Base();

  WorldStatusUpdate_Base(const WorldStatusUpdate_Base& from);

  inline WorldStatusUpdate_Base& operator=(const WorldStatusUpdate_Base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Base& default_instance();

  void Swap(WorldStatusUpdate_Base* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Base& from);
  void MergeFrom(const WorldStatusUpdate_Base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // optional int32 health = 2;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 2;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Base)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_health();
  inline void clear_has_health();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;
  ::google::protobuf::int32 health_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Base* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Mine : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Mine();
  virtual ~WorldStatusUpdate_Mine();

  WorldStatusUpdate_Mine(const WorldStatusUpdate_Mine& from);

  inline WorldStatusUpdate_Mine& operator=(const WorldStatusUpdate_Mine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Mine& default_instance();

  void Swap(WorldStatusUpdate_Mine* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Mine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Mine& from);
  void MergeFrom(const WorldStatusUpdate_Mine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // optional int32 capacity = 2;
  inline bool has_capacity() const;
  inline void clear_capacity();
  static const int kCapacityFieldNumber = 2;
  inline ::google::protobuf::int32 capacity() const;
  inline void set_capacity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Mine)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_capacity();
  inline void clear_has_capacity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;
  ::google::protobuf::int32 capacity_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Mine* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Obstacle : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Obstacle();
  virtual ~WorldStatusUpdate_Obstacle();

  WorldStatusUpdate_Obstacle(const WorldStatusUpdate_Obstacle& from);

  inline WorldStatusUpdate_Obstacle& operator=(const WorldStatusUpdate_Obstacle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Obstacle& default_instance();

  void Swap(WorldStatusUpdate_Obstacle* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Obstacle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Obstacle& from);
  void MergeFrom(const WorldStatusUpdate_Obstacle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Obstacle)
 private:
  inline void set_has_common();
  inline void clear_has_common();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Obstacle* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Worker : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Worker();
  virtual ~WorldStatusUpdate_Worker();

  WorldStatusUpdate_Worker(const WorldStatusUpdate_Worker& from);

  inline WorldStatusUpdate_Worker& operator=(const WorldStatusUpdate_Worker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Worker& default_instance();

  void Swap(WorldStatusUpdate_Worker* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Worker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Worker& from);
  void MergeFrom(const WorldStatusUpdate_Worker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // optional int32 resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline ::google::protobuf::int32 resource() const;
  inline void set_resource(::google::protobuf::int32 value);

  // optional int32 health = 3;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 3;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Worker)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_health();
  inline void clear_has_health();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;
  ::google::protobuf::int32 resource_;
  ::google::protobuf::int32 health_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Worker* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Soldier : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Soldier();
  virtual ~WorldStatusUpdate_Soldier();

  WorldStatusUpdate_Soldier(const WorldStatusUpdate_Soldier& from);

  inline WorldStatusUpdate_Soldier& operator=(const WorldStatusUpdate_Soldier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Soldier& default_instance();

  void Swap(WorldStatusUpdate_Soldier* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Soldier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Soldier& from);
  void MergeFrom(const WorldStatusUpdate_Soldier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // optional int32 health = 2;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 2;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Soldier)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_health();
  inline void clear_has_health();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;
  ::google::protobuf::int32 health_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Soldier* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Boss : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Boss();
  virtual ~WorldStatusUpdate_Boss();

  WorldStatusUpdate_Boss(const WorldStatusUpdate_Boss& from);

  inline WorldStatusUpdate_Boss& operator=(const WorldStatusUpdate_Boss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Boss& default_instance();

  void Swap(WorldStatusUpdate_Boss* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Boss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Boss& from);
  void MergeFrom(const WorldStatusUpdate_Boss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // optional int32 health = 2;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 2;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Boss)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_health();
  inline void clear_has_health();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;
  ::google::protobuf::int32 health_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Boss* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate_Minion : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate_Minion();
  virtual ~WorldStatusUpdate_Minion();

  WorldStatusUpdate_Minion(const WorldStatusUpdate_Minion& from);

  inline WorldStatusUpdate_Minion& operator=(const WorldStatusUpdate_Minion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate_Minion& default_instance();

  void Swap(WorldStatusUpdate_Minion* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate_Minion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate_Minion& from);
  void MergeFrom(const WorldStatusUpdate_Minion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& common() const;
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* mutable_common();
  inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* release_common();
  inline void set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common);

  // optional int32 health = 2;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 2;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate.Minion)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_health();
  inline void clear_has_health();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::strategy_protocol::WorldStatusUpdate_CommonProperties* common_;
  ::google::protobuf::int32 health_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate_Minion* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusUpdate : public ::google::protobuf::Message {
 public:
  WorldStatusUpdate();
  virtual ~WorldStatusUpdate();

  WorldStatusUpdate(const WorldStatusUpdate& from);

  inline WorldStatusUpdate& operator=(const WorldStatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusUpdate& default_instance();

  void Swap(WorldStatusUpdate* other);

  // implements Message ----------------------------------------------

  WorldStatusUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusUpdate& from);
  void MergeFrom(const WorldStatusUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorldStatusUpdate_CommonProperties CommonProperties;
  typedef WorldStatusUpdate_Base Base;
  typedef WorldStatusUpdate_Mine Mine;
  typedef WorldStatusUpdate_Obstacle Obstacle;
  typedef WorldStatusUpdate_Worker Worker;
  typedef WorldStatusUpdate_Soldier Soldier;
  typedef WorldStatusUpdate_Boss Boss;
  typedef WorldStatusUpdate_Minion Minion;

  // accessors -------------------------------------------------------

  // repeated .strategy_protocol.WorldStatusUpdate.Base bases = 1;
  inline int bases_size() const;
  inline void clear_bases();
  static const int kBasesFieldNumber = 1;
  inline const ::strategy_protocol::WorldStatusUpdate_Base& bases(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Base* mutable_bases(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Base* add_bases();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Base >&
      bases() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Base >*
      mutable_bases();

  // repeated .strategy_protocol.WorldStatusUpdate.Mine mines = 2;
  inline int mines_size() const;
  inline void clear_mines();
  static const int kMinesFieldNumber = 2;
  inline const ::strategy_protocol::WorldStatusUpdate_Mine& mines(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Mine* mutable_mines(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Mine* add_mines();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Mine >&
      mines() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Mine >*
      mutable_mines();

  // repeated .strategy_protocol.WorldStatusUpdate.Obstacle obstacles = 3;
  inline int obstacles_size() const;
  inline void clear_obstacles();
  static const int kObstaclesFieldNumber = 3;
  inline const ::strategy_protocol::WorldStatusUpdate_Obstacle& obstacles(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Obstacle* mutable_obstacles(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Obstacle* add_obstacles();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Obstacle >&
      obstacles() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Obstacle >*
      mutable_obstacles();

  // repeated .strategy_protocol.WorldStatusUpdate.Worker workers = 4;
  inline int workers_size() const;
  inline void clear_workers();
  static const int kWorkersFieldNumber = 4;
  inline const ::strategy_protocol::WorldStatusUpdate_Worker& workers(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Worker* mutable_workers(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Worker* add_workers();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Worker >&
      workers() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Worker >*
      mutable_workers();

  // repeated .strategy_protocol.WorldStatusUpdate.Soldier soldiers = 5;
  inline int soldiers_size() const;
  inline void clear_soldiers();
  static const int kSoldiersFieldNumber = 5;
  inline const ::strategy_protocol::WorldStatusUpdate_Soldier& soldiers(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Soldier* mutable_soldiers(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Soldier* add_soldiers();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Soldier >&
      soldiers() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Soldier >*
      mutable_soldiers();

  // repeated .strategy_protocol.WorldStatusUpdate.Boss bosses = 6;
  inline int bosses_size() const;
  inline void clear_bosses();
  static const int kBossesFieldNumber = 6;
  inline const ::strategy_protocol::WorldStatusUpdate_Boss& bosses(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Boss* mutable_bosses(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Boss* add_bosses();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Boss >&
      bosses() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Boss >*
      mutable_bosses();

  // repeated .strategy_protocol.WorldStatusUpdate.Minion minions = 7;
  inline int minions_size() const;
  inline void clear_minions();
  static const int kMinionsFieldNumber = 7;
  inline const ::strategy_protocol::WorldStatusUpdate_Minion& minions(int index) const;
  inline ::strategy_protocol::WorldStatusUpdate_Minion* mutable_minions(int index);
  inline ::strategy_protocol::WorldStatusUpdate_Minion* add_minions();
  inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Minion >&
      minions() const;
  inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Minion >*
      mutable_minions();

  // optional int32 resource = 8;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 8;
  inline ::google::protobuf::int32 resource() const;
  inline void set_resource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:strategy_protocol.WorldStatusUpdate)
 private:
  inline void set_has_resource();
  inline void clear_has_resource();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Base > bases_;
  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Mine > mines_;
  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Obstacle > obstacles_;
  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Worker > workers_;
  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Soldier > soldiers_;
  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Boss > bosses_;
  ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Minion > minions_;
  ::google::protobuf::int32 resource_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_AssignDesc_WorldStatusUpdate_2eproto();
  friend void protobuf_ShutdownFile_WorldStatusUpdate_2eproto();

  void InitAsDefaultInstance();
  static WorldStatusUpdate* default_instance_;
};
// ===================================================================


// ===================================================================

// WorldStatusUpdate_CommonProperties

// optional string id = 1;
inline bool WorldStatusUpdate_CommonProperties::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_CommonProperties::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_CommonProperties::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_CommonProperties::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& WorldStatusUpdate_CommonProperties::id() const {
  return *id_;
}
inline void WorldStatusUpdate_CommonProperties::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void WorldStatusUpdate_CommonProperties::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void WorldStatusUpdate_CommonProperties::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorldStatusUpdate_CommonProperties::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* WorldStatusUpdate_CommonProperties::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorldStatusUpdate_CommonProperties::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .strategy_protocol.Position position = 2;
inline bool WorldStatusUpdate_CommonProperties::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_CommonProperties::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_CommonProperties::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_CommonProperties::clear_position() {
  if (position_ != NULL) position_->::strategy_protocol::Position::Clear();
  clear_has_position();
}
inline const ::strategy_protocol::Position& WorldStatusUpdate_CommonProperties::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::strategy_protocol::Position* WorldStatusUpdate_CommonProperties::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::strategy_protocol::Position;
  return position_;
}
inline ::strategy_protocol::Position* WorldStatusUpdate_CommonProperties::release_position() {
  clear_has_position();
  ::strategy_protocol::Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_CommonProperties::set_allocated_position(::strategy_protocol::Position* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Base

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Base::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Base::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Base::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Base::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Base::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Base::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Base::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Base::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// optional int32 health = 2;
inline bool WorldStatusUpdate_Base::has_health() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_Base::set_has_health() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_Base::clear_has_health() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_Base::clear_health() {
  health_ = 0;
  clear_has_health();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Base::health() const {
  return health_;
}
inline void WorldStatusUpdate_Base::set_health(::google::protobuf::int32 value) {
  set_has_health();
  health_ = value;
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Mine

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Mine::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Mine::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Mine::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Mine::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Mine::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Mine::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Mine::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Mine::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// optional int32 capacity = 2;
inline bool WorldStatusUpdate_Mine::has_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_Mine::set_has_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_Mine::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_Mine::clear_capacity() {
  capacity_ = 0;
  clear_has_capacity();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Mine::capacity() const {
  return capacity_;
}
inline void WorldStatusUpdate_Mine::set_capacity(::google::protobuf::int32 value) {
  set_has_capacity();
  capacity_ = value;
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Obstacle

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Obstacle::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Obstacle::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Obstacle::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Obstacle::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Obstacle::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Obstacle::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Obstacle::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Obstacle::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Worker

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Worker::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Worker::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Worker::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Worker::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Worker::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Worker::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Worker::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Worker::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// optional int32 resource = 2;
inline bool WorldStatusUpdate_Worker::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_Worker::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_Worker::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_Worker::clear_resource() {
  resource_ = 0;
  clear_has_resource();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Worker::resource() const {
  return resource_;
}
inline void WorldStatusUpdate_Worker::set_resource(::google::protobuf::int32 value) {
  set_has_resource();
  resource_ = value;
}

// optional int32 health = 3;
inline bool WorldStatusUpdate_Worker::has_health() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldStatusUpdate_Worker::set_has_health() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldStatusUpdate_Worker::clear_has_health() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldStatusUpdate_Worker::clear_health() {
  health_ = 0;
  clear_has_health();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Worker::health() const {
  return health_;
}
inline void WorldStatusUpdate_Worker::set_health(::google::protobuf::int32 value) {
  set_has_health();
  health_ = value;
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Soldier

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Soldier::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Soldier::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Soldier::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Soldier::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Soldier::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Soldier::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Soldier::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Soldier::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// optional int32 health = 2;
inline bool WorldStatusUpdate_Soldier::has_health() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_Soldier::set_has_health() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_Soldier::clear_has_health() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_Soldier::clear_health() {
  health_ = 0;
  clear_has_health();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Soldier::health() const {
  return health_;
}
inline void WorldStatusUpdate_Soldier::set_health(::google::protobuf::int32 value) {
  set_has_health();
  health_ = value;
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Boss

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Boss::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Boss::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Boss::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Boss::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Boss::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Boss::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Boss::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Boss::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// optional int32 health = 2;
inline bool WorldStatusUpdate_Boss::has_health() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_Boss::set_has_health() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_Boss::clear_has_health() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_Boss::clear_health() {
  health_ = 0;
  clear_has_health();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Boss::health() const {
  return health_;
}
inline void WorldStatusUpdate_Boss::set_health(::google::protobuf::int32 value) {
  set_has_health();
  health_ = value;
}

// -------------------------------------------------------------------

// WorldStatusUpdate_Minion

// optional .strategy_protocol.WorldStatusUpdate.CommonProperties common = 1;
inline bool WorldStatusUpdate_Minion::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldStatusUpdate_Minion::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldStatusUpdate_Minion::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldStatusUpdate_Minion::clear_common() {
  if (common_ != NULL) common_->::strategy_protocol::WorldStatusUpdate_CommonProperties::Clear();
  clear_has_common();
}
inline const ::strategy_protocol::WorldStatusUpdate_CommonProperties& WorldStatusUpdate_Minion::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Minion::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::strategy_protocol::WorldStatusUpdate_CommonProperties;
  return common_;
}
inline ::strategy_protocol::WorldStatusUpdate_CommonProperties* WorldStatusUpdate_Minion::release_common() {
  clear_has_common();
  ::strategy_protocol::WorldStatusUpdate_CommonProperties* temp = common_;
  common_ = NULL;
  return temp;
}
inline void WorldStatusUpdate_Minion::set_allocated_common(::strategy_protocol::WorldStatusUpdate_CommonProperties* common) {
  delete common_;
  common_ = common;
  if (common) {
    set_has_common();
  } else {
    clear_has_common();
  }
}

// optional int32 health = 2;
inline bool WorldStatusUpdate_Minion::has_health() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldStatusUpdate_Minion::set_has_health() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldStatusUpdate_Minion::clear_has_health() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldStatusUpdate_Minion::clear_health() {
  health_ = 0;
  clear_has_health();
}
inline ::google::protobuf::int32 WorldStatusUpdate_Minion::health() const {
  return health_;
}
inline void WorldStatusUpdate_Minion::set_health(::google::protobuf::int32 value) {
  set_has_health();
  health_ = value;
}

// -------------------------------------------------------------------

// WorldStatusUpdate

// repeated .strategy_protocol.WorldStatusUpdate.Base bases = 1;
inline int WorldStatusUpdate::bases_size() const {
  return bases_.size();
}
inline void WorldStatusUpdate::clear_bases() {
  bases_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Base& WorldStatusUpdate::bases(int index) const {
  return bases_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Base* WorldStatusUpdate::mutable_bases(int index) {
  return bases_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Base* WorldStatusUpdate::add_bases() {
  return bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Base >&
WorldStatusUpdate::bases() const {
  return bases_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Base >*
WorldStatusUpdate::mutable_bases() {
  return &bases_;
}

// repeated .strategy_protocol.WorldStatusUpdate.Mine mines = 2;
inline int WorldStatusUpdate::mines_size() const {
  return mines_.size();
}
inline void WorldStatusUpdate::clear_mines() {
  mines_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Mine& WorldStatusUpdate::mines(int index) const {
  return mines_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Mine* WorldStatusUpdate::mutable_mines(int index) {
  return mines_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Mine* WorldStatusUpdate::add_mines() {
  return mines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Mine >&
WorldStatusUpdate::mines() const {
  return mines_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Mine >*
WorldStatusUpdate::mutable_mines() {
  return &mines_;
}

// repeated .strategy_protocol.WorldStatusUpdate.Obstacle obstacles = 3;
inline int WorldStatusUpdate::obstacles_size() const {
  return obstacles_.size();
}
inline void WorldStatusUpdate::clear_obstacles() {
  obstacles_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Obstacle& WorldStatusUpdate::obstacles(int index) const {
  return obstacles_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Obstacle* WorldStatusUpdate::mutable_obstacles(int index) {
  return obstacles_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Obstacle* WorldStatusUpdate::add_obstacles() {
  return obstacles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Obstacle >&
WorldStatusUpdate::obstacles() const {
  return obstacles_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Obstacle >*
WorldStatusUpdate::mutable_obstacles() {
  return &obstacles_;
}

// repeated .strategy_protocol.WorldStatusUpdate.Worker workers = 4;
inline int WorldStatusUpdate::workers_size() const {
  return workers_.size();
}
inline void WorldStatusUpdate::clear_workers() {
  workers_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Worker& WorldStatusUpdate::workers(int index) const {
  return workers_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Worker* WorldStatusUpdate::mutable_workers(int index) {
  return workers_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Worker* WorldStatusUpdate::add_workers() {
  return workers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Worker >&
WorldStatusUpdate::workers() const {
  return workers_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Worker >*
WorldStatusUpdate::mutable_workers() {
  return &workers_;
}

// repeated .strategy_protocol.WorldStatusUpdate.Soldier soldiers = 5;
inline int WorldStatusUpdate::soldiers_size() const {
  return soldiers_.size();
}
inline void WorldStatusUpdate::clear_soldiers() {
  soldiers_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Soldier& WorldStatusUpdate::soldiers(int index) const {
  return soldiers_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Soldier* WorldStatusUpdate::mutable_soldiers(int index) {
  return soldiers_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Soldier* WorldStatusUpdate::add_soldiers() {
  return soldiers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Soldier >&
WorldStatusUpdate::soldiers() const {
  return soldiers_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Soldier >*
WorldStatusUpdate::mutable_soldiers() {
  return &soldiers_;
}

// repeated .strategy_protocol.WorldStatusUpdate.Boss bosses = 6;
inline int WorldStatusUpdate::bosses_size() const {
  return bosses_.size();
}
inline void WorldStatusUpdate::clear_bosses() {
  bosses_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Boss& WorldStatusUpdate::bosses(int index) const {
  return bosses_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Boss* WorldStatusUpdate::mutable_bosses(int index) {
  return bosses_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Boss* WorldStatusUpdate::add_bosses() {
  return bosses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Boss >&
WorldStatusUpdate::bosses() const {
  return bosses_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Boss >*
WorldStatusUpdate::mutable_bosses() {
  return &bosses_;
}

// repeated .strategy_protocol.WorldStatusUpdate.Minion minions = 7;
inline int WorldStatusUpdate::minions_size() const {
  return minions_.size();
}
inline void WorldStatusUpdate::clear_minions() {
  minions_.Clear();
}
inline const ::strategy_protocol::WorldStatusUpdate_Minion& WorldStatusUpdate::minions(int index) const {
  return minions_.Get(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Minion* WorldStatusUpdate::mutable_minions(int index) {
  return minions_.Mutable(index);
}
inline ::strategy_protocol::WorldStatusUpdate_Minion* WorldStatusUpdate::add_minions() {
  return minions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Minion >&
WorldStatusUpdate::minions() const {
  return minions_;
}
inline ::google::protobuf::RepeatedPtrField< ::strategy_protocol::WorldStatusUpdate_Minion >*
WorldStatusUpdate::mutable_minions() {
  return &minions_;
}

// optional int32 resource = 8;
inline bool WorldStatusUpdate::has_resource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldStatusUpdate::set_has_resource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldStatusUpdate::clear_has_resource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldStatusUpdate::clear_resource() {
  resource_ = 0;
  clear_has_resource();
}
inline ::google::protobuf::int32 WorldStatusUpdate::resource() const {
  return resource_;
}
inline void WorldStatusUpdate::set_resource(::google::protobuf::int32 value) {
  set_has_resource();
  resource_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace strategy_protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WorldStatusUpdate_2eproto__INCLUDED
